// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chat/chatpb/chat.proto

package chatpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Null struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Null) Reset()         { *m = Null{} }
func (m *Null) String() string { return proto.CompactTextString(m) }
func (*Null) ProtoMessage()    {}
func (*Null) Descriptor() ([]byte, []int) {
	return fileDescriptor_56d8c175c0c7a32e, []int{0}
}

func (m *Null) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Null.Unmarshal(m, b)
}
func (m *Null) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Null.Marshal(b, m, deterministic)
}
func (m *Null) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Null.Merge(m, src)
}
func (m *Null) XXX_Size() int {
	return xxx_messageInfo_Null.Size(m)
}
func (m *Null) XXX_DiscardUnknown() {
	xxx_messageInfo_Null.DiscardUnknown(m)
}

var xxx_messageInfo_Null proto.InternalMessageInfo

type PostRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Content              string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PostRequest) Reset()         { *m = PostRequest{} }
func (m *PostRequest) String() string { return proto.CompactTextString(m) }
func (*PostRequest) ProtoMessage()    {}
func (*PostRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56d8c175c0c7a32e, []int{1}
}

func (m *PostRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostRequest.Unmarshal(m, b)
}
func (m *PostRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostRequest.Marshal(b, m, deterministic)
}
func (m *PostRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostRequest.Merge(m, src)
}
func (m *PostRequest) XXX_Size() int {
	return xxx_messageInfo_PostRequest.Size(m)
}
func (m *PostRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PostRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PostRequest proto.InternalMessageInfo

func (m *PostRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PostRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type PostResult struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PostResult) Reset()         { *m = PostResult{} }
func (m *PostResult) String() string { return proto.CompactTextString(m) }
func (*PostResult) ProtoMessage()    {}
func (*PostResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_56d8c175c0c7a32e, []int{2}
}

func (m *PostResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostResult.Unmarshal(m, b)
}
func (m *PostResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostResult.Marshal(b, m, deterministic)
}
func (m *PostResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostResult.Merge(m, src)
}
func (m *PostResult) XXX_Size() int {
	return xxx_messageInfo_PostResult.Size(m)
}
func (m *PostResult) XXX_DiscardUnknown() {
	xxx_messageInfo_PostResult.DiscardUnknown(m)
}

var xxx_messageInfo_PostResult proto.InternalMessageInfo

func (m *PostResult) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type TransferResult struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Content              string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferResult) Reset()         { *m = TransferResult{} }
func (m *TransferResult) String() string { return proto.CompactTextString(m) }
func (*TransferResult) ProtoMessage()    {}
func (*TransferResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_56d8c175c0c7a32e, []int{3}
}

func (m *TransferResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferResult.Unmarshal(m, b)
}
func (m *TransferResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferResult.Marshal(b, m, deterministic)
}
func (m *TransferResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferResult.Merge(m, src)
}
func (m *TransferResult) XXX_Size() int {
	return xxx_messageInfo_TransferResult.Size(m)
}
func (m *TransferResult) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferResult.DiscardUnknown(m)
}

var xxx_messageInfo_TransferResult proto.InternalMessageInfo

func (m *TransferResult) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TransferResult) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func init() {
	proto.RegisterType((*Null)(nil), "chat.Null")
	proto.RegisterType((*PostRequest)(nil), "chat.PostRequest")
	proto.RegisterType((*PostResult)(nil), "chat.PostResult")
	proto.RegisterType((*TransferResult)(nil), "chat.TransferResult")
}

func init() { proto.RegisterFile("chat/chatpb/chat.proto", fileDescriptor_56d8c175c0c7a32e) }

var fileDescriptor_56d8c175c0c7a32e = []byte{
	// 219 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4b, 0xce, 0x48, 0x2c,
	0xd1, 0x07, 0x11, 0x05, 0x49, 0x60, 0x4a, 0xaf, 0xa0, 0x28, 0xbf, 0x24, 0x5f, 0x88, 0x05, 0xc4,
	0x56, 0x62, 0xe3, 0x62, 0xf1, 0x2b, 0xcd, 0xc9, 0x51, 0xb2, 0xe6, 0xe2, 0x0e, 0xc8, 0x2f, 0x2e,
	0x09, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe2, 0x62, 0xc9, 0x4b, 0xcc, 0x4d, 0x95,
	0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x85, 0x24, 0xb8, 0xd8, 0x93, 0xf3, 0xf3, 0x4a,
	0x52, 0xf3, 0x4a, 0x24, 0x98, 0xc0, 0xc2, 0x30, 0xae, 0x92, 0x0a, 0x17, 0x17, 0x44, 0x73, 0x71,
	0x69, 0x4e, 0x89, 0x90, 0x18, 0x17, 0x5b, 0x11, 0x98, 0x05, 0xd6, 0xcd, 0x11, 0x04, 0xe5, 0x29,
	0xd9, 0x71, 0xf1, 0x85, 0x14, 0x25, 0xe6, 0x15, 0xa7, 0xa5, 0x16, 0x41, 0x55, 0x92, 0x64, 0x8b,
	0x51, 0x23, 0x23, 0x17, 0x9f, 0x6f, 0x6a, 0x71, 0x71, 0x62, 0x7a, 0x6a, 0x70, 0x6a, 0x51, 0x59,
	0x66, 0x72, 0xaa, 0x90, 0x19, 0xc4, 0xd5, 0x50, 0x51, 0x21, 0x41, 0x3d, 0xb0, 0xff, 0x90, 0x3c,
	0x22, 0x25, 0x80, 0x2c, 0x04, 0x76, 0x06, 0x83, 0x06, 0xa3, 0x90, 0x39, 0x17, 0x3f, 0xcc, 0x29,
	0x30, 0xbd, 0x5c, 0x10, 0x85, 0xa0, 0xc0, 0x90, 0x12, 0x81, 0xb0, 0x51, 0x5d, 0xab, 0xc4, 0x60,
	0xc0, 0xe8, 0xc4, 0x11, 0xc5, 0x06, 0x09, 0xc9, 0x24, 0x36, 0x70, 0x28, 0x1a, 0x03, 0x02, 0x00,
	0x00, 0xff, 0xff, 0x9f, 0x3e, 0x12, 0xd1, 0x5f, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MessageServiceClient is the client API for MessageService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MessageServiceClient interface {
	PostMessage(ctx context.Context, opts ...grpc.CallOption) (MessageService_PostMessageClient, error)
	TransferMessage(ctx context.Context, in *Null, opts ...grpc.CallOption) (MessageService_TransferMessageClient, error)
}

type messageServiceClient struct {
	cc *grpc.ClientConn
}

func NewMessageServiceClient(cc *grpc.ClientConn) MessageServiceClient {
	return &messageServiceClient{cc}
}

func (c *messageServiceClient) PostMessage(ctx context.Context, opts ...grpc.CallOption) (MessageService_PostMessageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MessageService_serviceDesc.Streams[0], "/chat.MessageService/PostMessage", opts...)
	if err != nil {
		return nil, err
	}
	x := &messageServicePostMessageClient{stream}
	return x, nil
}

type MessageService_PostMessageClient interface {
	Send(*PostRequest) error
	CloseAndRecv() (*PostResult, error)
	grpc.ClientStream
}

type messageServicePostMessageClient struct {
	grpc.ClientStream
}

func (x *messageServicePostMessageClient) Send(m *PostRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *messageServicePostMessageClient) CloseAndRecv() (*PostResult, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(PostResult)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *messageServiceClient) TransferMessage(ctx context.Context, in *Null, opts ...grpc.CallOption) (MessageService_TransferMessageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MessageService_serviceDesc.Streams[1], "/chat.MessageService/TransferMessage", opts...)
	if err != nil {
		return nil, err
	}
	x := &messageServiceTransferMessageClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MessageService_TransferMessageClient interface {
	Recv() (*TransferResult, error)
	grpc.ClientStream
}

type messageServiceTransferMessageClient struct {
	grpc.ClientStream
}

func (x *messageServiceTransferMessageClient) Recv() (*TransferResult, error) {
	m := new(TransferResult)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MessageServiceServer is the server API for MessageService service.
type MessageServiceServer interface {
	PostMessage(MessageService_PostMessageServer) error
	TransferMessage(*Null, MessageService_TransferMessageServer) error
}

// UnimplementedMessageServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMessageServiceServer struct {
}

func (*UnimplementedMessageServiceServer) PostMessage(srv MessageService_PostMessageServer) error {
	return status.Errorf(codes.Unimplemented, "method PostMessage not implemented")
}
func (*UnimplementedMessageServiceServer) TransferMessage(req *Null, srv MessageService_TransferMessageServer) error {
	return status.Errorf(codes.Unimplemented, "method TransferMessage not implemented")
}

func RegisterMessageServiceServer(s *grpc.Server, srv MessageServiceServer) {
	s.RegisterService(&_MessageService_serviceDesc, srv)
}

func _MessageService_PostMessage_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MessageServiceServer).PostMessage(&messageServicePostMessageServer{stream})
}

type MessageService_PostMessageServer interface {
	SendAndClose(*PostResult) error
	Recv() (*PostRequest, error)
	grpc.ServerStream
}

type messageServicePostMessageServer struct {
	grpc.ServerStream
}

func (x *messageServicePostMessageServer) SendAndClose(m *PostResult) error {
	return x.ServerStream.SendMsg(m)
}

func (x *messageServicePostMessageServer) Recv() (*PostRequest, error) {
	m := new(PostRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _MessageService_TransferMessage_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Null)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MessageServiceServer).TransferMessage(m, &messageServiceTransferMessageServer{stream})
}

type MessageService_TransferMessageServer interface {
	Send(*TransferResult) error
	grpc.ServerStream
}

type messageServiceTransferMessageServer struct {
	grpc.ServerStream
}

func (x *messageServiceTransferMessageServer) Send(m *TransferResult) error {
	return x.ServerStream.SendMsg(m)
}

var _MessageService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chat.MessageService",
	HandlerType: (*MessageServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PostMessage",
			Handler:       _MessageService_PostMessage_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "TransferMessage",
			Handler:       _MessageService_TransferMessage_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "chat/chatpb/chat.proto",
}
