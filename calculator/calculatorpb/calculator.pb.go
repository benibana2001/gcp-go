// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calculator/calculatorpb/calculator.proto

package calculatorpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Sum struct {
	FirstNum             int32    `protobuf:"varint,1,opt,name=first_num,json=firstNum,proto3" json:"first_num,omitempty"`
	SecondNum            int32    `protobuf:"varint,2,opt,name=second_num,json=secondNum,proto3" json:"second_num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sum) Reset()         { *m = Sum{} }
func (m *Sum) String() string { return proto.CompactTextString(m) }
func (*Sum) ProtoMessage()    {}
func (*Sum) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{0}
}

func (m *Sum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sum.Unmarshal(m, b)
}
func (m *Sum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sum.Marshal(b, m, deterministic)
}
func (m *Sum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sum.Merge(m, src)
}
func (m *Sum) XXX_Size() int {
	return xxx_messageInfo_Sum.Size(m)
}
func (m *Sum) XXX_DiscardUnknown() {
	xxx_messageInfo_Sum.DiscardUnknown(m)
}

var xxx_messageInfo_Sum proto.InternalMessageInfo

func (m *Sum) GetFirstNum() int32 {
	if m != nil {
		return m.FirstNum
	}
	return 0
}

func (m *Sum) GetSecondNum() int32 {
	if m != nil {
		return m.SecondNum
	}
	return 0
}

type SumRequest struct {
	Sum                  *Sum     `protobuf:"bytes,1,opt,name=sum,proto3" json:"sum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumRequest) Reset()         { *m = SumRequest{} }
func (m *SumRequest) String() string { return proto.CompactTextString(m) }
func (*SumRequest) ProtoMessage()    {}
func (*SumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{1}
}

func (m *SumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumRequest.Unmarshal(m, b)
}
func (m *SumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumRequest.Marshal(b, m, deterministic)
}
func (m *SumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumRequest.Merge(m, src)
}
func (m *SumRequest) XXX_Size() int {
	return xxx_messageInfo_SumRequest.Size(m)
}
func (m *SumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SumRequest proto.InternalMessageInfo

func (m *SumRequest) GetSum() *Sum {
	if m != nil {
		return m.Sum
	}
	return nil
}

type SumResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumResponse) Reset()         { *m = SumResponse{} }
func (m *SumResponse) String() string { return proto.CompactTextString(m) }
func (*SumResponse) ProtoMessage()    {}
func (*SumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{2}
}

func (m *SumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumResponse.Unmarshal(m, b)
}
func (m *SumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumResponse.Marshal(b, m, deterministic)
}
func (m *SumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumResponse.Merge(m, src)
}
func (m *SumResponse) XXX_Size() int {
	return xxx_messageInfo_SumResponse.Size(m)
}
func (m *SumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SumResponse proto.InternalMessageInfo

func (m *SumResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type DecompositManyTimeRequest struct {
	PrimeNumber          int32    `protobuf:"varint,1,opt,name=primeNumber,proto3" json:"primeNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecompositManyTimeRequest) Reset()         { *m = DecompositManyTimeRequest{} }
func (m *DecompositManyTimeRequest) String() string { return proto.CompactTextString(m) }
func (*DecompositManyTimeRequest) ProtoMessage()    {}
func (*DecompositManyTimeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{3}
}

func (m *DecompositManyTimeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecompositManyTimeRequest.Unmarshal(m, b)
}
func (m *DecompositManyTimeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecompositManyTimeRequest.Marshal(b, m, deterministic)
}
func (m *DecompositManyTimeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecompositManyTimeRequest.Merge(m, src)
}
func (m *DecompositManyTimeRequest) XXX_Size() int {
	return xxx_messageInfo_DecompositManyTimeRequest.Size(m)
}
func (m *DecompositManyTimeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DecompositManyTimeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DecompositManyTimeRequest proto.InternalMessageInfo

func (m *DecompositManyTimeRequest) GetPrimeNumber() int32 {
	if m != nil {
		return m.PrimeNumber
	}
	return 0
}

type DecompositManyTimesResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecompositManyTimesResponse) Reset()         { *m = DecompositManyTimesResponse{} }
func (m *DecompositManyTimesResponse) String() string { return proto.CompactTextString(m) }
func (*DecompositManyTimesResponse) ProtoMessage()    {}
func (*DecompositManyTimesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{4}
}

func (m *DecompositManyTimesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecompositManyTimesResponse.Unmarshal(m, b)
}
func (m *DecompositManyTimesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecompositManyTimesResponse.Marshal(b, m, deterministic)
}
func (m *DecompositManyTimesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecompositManyTimesResponse.Merge(m, src)
}
func (m *DecompositManyTimesResponse) XXX_Size() int {
	return xxx_messageInfo_DecompositManyTimesResponse.Size(m)
}
func (m *DecompositManyTimesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DecompositManyTimesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DecompositManyTimesResponse proto.InternalMessageInfo

func (m *DecompositManyTimesResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*Sum)(nil), "calculator.Sum")
	proto.RegisterType((*SumRequest)(nil), "calculator.SumRequest")
	proto.RegisterType((*SumResponse)(nil), "calculator.SumResponse")
	proto.RegisterType((*DecompositManyTimeRequest)(nil), "calculator.DecompositManyTimeRequest")
	proto.RegisterType((*DecompositManyTimesResponse)(nil), "calculator.DecompositManyTimesResponse")
}

func init() {
	proto.RegisterFile("calculator/calculatorpb/calculator.proto", fileDescriptor_7f42938f8c8365cf)
}

var fileDescriptor_7f42938f8c8365cf = []byte{
	// 277 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x51, 0x4d, 0x4b, 0xc3, 0x40,
	0x14, 0x34, 0x16, 0x8b, 0x7d, 0x11, 0x95, 0x15, 0xaa, 0xb6, 0x08, 0x75, 0xa1, 0xd8, 0x53, 0x2b,
	0x15, 0xbd, 0x79, 0xf0, 0xe3, 0x6a, 0x0e, 0x8d, 0x27, 0x2f, 0x92, 0xac, 0x4f, 0x58, 0xc8, 0x66,
	0xd7, 0xfd, 0x10, 0xfc, 0x61, 0xfe, 0x3f, 0xe9, 0x66, 0xb5, 0x8b, 0xf1, 0xe3, 0x96, 0x37, 0x6f,
	0x26, 0x33, 0xb3, 0x0f, 0x26, 0xac, 0xa8, 0x98, 0xab, 0x0a, 0x2b, 0xf5, 0x6c, 0xf5, 0xa9, 0xca,
	0x68, 0x98, 0x2a, 0x2d, 0xad, 0x24, 0xb0, 0x42, 0xe8, 0x15, 0x74, 0x72, 0x27, 0xc8, 0x10, 0x7a,
	0xcf, 0x5c, 0x1b, 0xfb, 0x58, 0x3b, 0x71, 0x90, 0x8c, 0x92, 0xc9, 0xc6, 0x62, 0xd3, 0x03, 0x99,
	0x13, 0xe4, 0x08, 0xc0, 0x20, 0x93, 0xf5, 0x93, 0xdf, 0xae, 0xfb, 0x6d, 0xaf, 0x41, 0x32, 0x27,
	0xe8, 0x0c, 0x20, 0x77, 0x62, 0x81, 0x2f, 0x0e, 0x8d, 0x25, 0xc7, 0xd0, 0x31, 0xe1, 0x1f, 0xe9,
	0x7c, 0x67, 0x1a, 0x99, 0x2f, 0x49, 0xcb, 0x1d, 0x1d, 0x43, 0xea, 0x05, 0x46, 0xc9, 0xda, 0x20,
	0xe9, 0x43, 0x57, 0xa3, 0x71, 0x95, 0x0d, 0xc6, 0x61, 0xa2, 0x97, 0x70, 0x78, 0x8b, 0x4c, 0x0a,
	0x25, 0x0d, 0xb7, 0x77, 0x45, 0xfd, 0x76, 0xcf, 0x05, 0x7e, 0xda, 0x8c, 0x20, 0x55, 0x9a, 0x0b,
	0xcc, 0x9c, 0x28, 0x51, 0x07, 0x65, 0x0c, 0xd1, 0x73, 0x18, 0xb6, 0xe5, 0xe6, 0x3f, 0xd7, 0xf9,
	0x7b, 0x02, 0xbb, 0x37, 0x21, 0x34, 0xe6, 0xa8, 0x5f, 0x39, 0x43, 0x72, 0xd1, 0xbc, 0x52, 0xff,
	0x7b, 0x9d, 0x26, 0xcc, 0x60, 0xbf, 0x85, 0x07, 0x13, 0x0e, 0x7b, 0x3f, 0x64, 0x20, 0xe3, 0x98,
	0xff, 0x6b, 0xc7, 0xc1, 0xc9, 0xdf, 0xb4, 0xaf, 0x2e, 0x74, 0xed, 0x34, 0xb9, 0xde, 0x7e, 0xd8,
	0x8a, 0xaf, 0x5e, 0x76, 0xfd, 0xad, 0xcf, 0x3e, 0x02, 0x00, 0x00, 0xff, 0xff, 0x28, 0xff, 0x29,
	0xeb, 0x17, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CalculateServiceClient is the client API for CalculateService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalculateServiceClient interface {
	// Unary
	Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error)
	// Server Streaming
	DecompositManyTimes(ctx context.Context, in *DecompositManyTimeRequest, opts ...grpc.CallOption) (CalculateService_DecompositManyTimesClient, error)
}

type calculateServiceClient struct {
	cc *grpc.ClientConn
}

func NewCalculateServiceClient(cc *grpc.ClientConn) CalculateServiceClient {
	return &calculateServiceClient{cc}
}

func (c *calculateServiceClient) Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error) {
	out := new(SumResponse)
	err := c.cc.Invoke(ctx, "/calculator.CalculateService/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calculateServiceClient) DecompositManyTimes(ctx context.Context, in *DecompositManyTimeRequest, opts ...grpc.CallOption) (CalculateService_DecompositManyTimesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculateService_serviceDesc.Streams[0], "/calculator.CalculateService/DecompositManyTimes", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculateServiceDecompositManyTimesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CalculateService_DecompositManyTimesClient interface {
	Recv() (*DecompositManyTimesResponse, error)
	grpc.ClientStream
}

type calculateServiceDecompositManyTimesClient struct {
	grpc.ClientStream
}

func (x *calculateServiceDecompositManyTimesClient) Recv() (*DecompositManyTimesResponse, error) {
	m := new(DecompositManyTimesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CalculateServiceServer is the server API for CalculateService service.
type CalculateServiceServer interface {
	// Unary
	Sum(context.Context, *SumRequest) (*SumResponse, error)
	// Server Streaming
	DecompositManyTimes(*DecompositManyTimeRequest, CalculateService_DecompositManyTimesServer) error
}

// UnimplementedCalculateServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCalculateServiceServer struct {
}

func (*UnimplementedCalculateServiceServer) Sum(ctx context.Context, req *SumRequest) (*SumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sum not implemented")
}
func (*UnimplementedCalculateServiceServer) DecompositManyTimes(req *DecompositManyTimeRequest, srv CalculateService_DecompositManyTimesServer) error {
	return status.Errorf(codes.Unimplemented, "method DecompositManyTimes not implemented")
}

func RegisterCalculateServiceServer(s *grpc.Server, srv CalculateServiceServer) {
	s.RegisterService(&_CalculateService_serviceDesc, srv)
}

func _CalculateService_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculateServiceServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.CalculateService/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculateServiceServer).Sum(ctx, req.(*SumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalculateService_DecompositManyTimes_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DecompositManyTimeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CalculateServiceServer).DecompositManyTimes(m, &calculateServiceDecompositManyTimesServer{stream})
}

type CalculateService_DecompositManyTimesServer interface {
	Send(*DecompositManyTimesResponse) error
	grpc.ServerStream
}

type calculateServiceDecompositManyTimesServer struct {
	grpc.ServerStream
}

func (x *calculateServiceDecompositManyTimesServer) Send(m *DecompositManyTimesResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _CalculateService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.CalculateService",
	HandlerType: (*CalculateServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sum",
			Handler:    _CalculateService_Sum_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "DecompositManyTimes",
			Handler:       _CalculateService_DecompositManyTimes_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "calculator/calculatorpb/calculator.proto",
}
